jwt:
  secret: noctzekapmeoaycaesxkmndqacqqahooszvhevakrkriilinfwbetcbtaeuujqjlyelgtziezxneqiehodjzulhxswgcfhjaupegnqjpvukxjfsiujwxumnftlivyagq
  expire:
    hours: 24

server:
  port: 8080
  servlet.context-path: /

spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/databucket
    username: databucket_user
    password: databucket_user
  mail:
    host: smtp.gmail.com
    port: 587
    username: username
    password: password
    from: admin@email.io
    properties:
      mail:
        smtp:
          auth: true
        starttls:
          enable: true
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://auth.localhost/auth/realms/databucket
      client:
        registration:
          doptools:
            client-id: databucket
#            client-secret: 69b9a190-407b-4bfd-a347-5b9b75959876
            authorization-grant-type: authorization_code
            redirect-uri: '{baseUrl}/login/oauth2/code/{registrationId}'
            scope: openid
        provider:
          doptools:
            issuer-uri: http://auth.localhost/auth/realms/databucket
            user-name-attribute: preferred_username
logging:
  level:
    pl.databucket.service.data.DataService: debug
#    org.springframework.security: debug
