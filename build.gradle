plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.8'
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'pl.databucket'
version = '3.4.4'
targetCompatibility = 17
sourceCompatibility = 17

ext['log4j2.version'] = '2.20.0'
ext['tomcat.version'] = '9.0.71'
ext['jackson.version'] = '2.13.4'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    all*.exclude module: 'spring-boot-starter-logging'
}

repositories {
    mavenCentral()
}

jar {
    enabled = false
}


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework:spring-tx:5.3.25'
    implementation 'org.postgresql:postgresql:42.3.8'
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.14'
    implementation 'javax.validation:validation-api:2.0.1.Final'
    implementation 'com.vladmihalcea:hibernate-types-52:2.12.0'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation 'org.modelmapper:modelmapper:2.4.4'
    implementation 'com.lmax:disruptor:3.4.3'
    implementation 'org.projectlombok:lombok:1.18.20'

    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok'

//    testImplementation('org.springframework.boot:spring-boot-starter-test:2.5.4') {exclude group: 'junit', module: 'junit'}

    // JUnit dependencies
//    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'
//    testRuntimeOnly 'org.junit.vintage:junit-vintage-engine:5.7.2'
//    testRuntimeOnly 'org.junit.platform:junit-platform-commons:1.7.2'

    // Spock - Mandatory dependencies
//    testImplementation 'org.codehaus.groovy:groovy-all:3.0.8'
//    testImplementation 'org.spockframework:spock-core:2.0-groovy-3.0'
//    testImplementation 'org.spockframework:spock-spring:2.0-groovy-3.0'
}

test {
//    useJUnitPlatform()
    afterSuite { desc, result ->
        if (!desc.parent) {
            println("${result.resultType} " +
                    "(${result.testCount} tests, " +
                    "${result.successfulTestCount} successes, " +
                    "${result.failedTestCount} failures, " +
                    "${result.skippedTestCount} skipped)")
        }
    }
}

import org.apache.tools.ant.taskdefs.condition.Os

tasks.register('deleteStatic', Delete) {
    delete "src/main/resources/static"
}

tasks.register('buildFrontend', GradleBuild) {
    String npm = 'npm'
    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
        npm = 'npm.cmd'
    }

    exec {
        workingDir 'frontend'
        commandLine npm, 'install'
    }

    exec {
        workingDir 'frontend'
        commandLine npm, 'run', 'build'
    }
}

tasks.register('copyFrontend') {
    dependsOn tasks.named('buildFrontend')

    copy {
        from "frontend/build"
        into "src/main/resources/static"
    }
}

clean.dependsOn tasks.named("deleteStatic")
bootJar.dependsOn tasks.named("copyFrontend")
springBoot {
    buildInfo()
}
